CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 12
    Total Memory: 264106564 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/Deprecated/MNIST/02_Convolution_ndl//02_Convolution_ndl_deprecated.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Image/DataSets/MNIST RunDir=/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Image/DataSets/MNIST ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/Deprecated/MNIST/02_Convolution_ndl/ OutputDir=/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu DeviceId=0 timestamping=true forceDeterministicAlgorithms=true train=[SGD=[maxEpochs=3]] imageLayout="" stderr=-
CNTK 2.1+ (HEAD 572609, Aug 21 2017 08:22:49) on ad5c3ab446a4 at 2017/08/21 08:52:54

/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/Deprecated/MNIST/02_Convolution_ndl//02_Convolution_ndl_deprecated.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Image/DataSets/MNIST  RunDir=/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Image/DataSets/MNIST  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/Deprecated/MNIST/02_Convolution_ndl/  OutputDir=/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu  DeviceId=0  timestamping=true  forceDeterministicAlgorithms=true  train=[SGD=[maxEpochs=3]]  imageLayout=""  stderr=-
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Image/DataSets/MNIST
08/21/2017 08:52:54: Redirecting stderr to file -_train_test.log
08/21/2017 08:52:54: -------------------------------------------------------------------
08/21/2017 08:52:54: Build info: 

08/21/2017 08:52:54: 		Built time: Aug 21 2017 08:20:29
08/21/2017 08:52:54: 		Last modified date: Thu Aug  3 09:47:36 2017
08/21/2017 08:52:54: 		Build type: release
08/21/2017 08:52:54: 		Build target: GPU
08/21/2017 08:52:54: 		With 1bit-SGD: no
08/21/2017 08:52:54: 		With ASGD: yes
08/21/2017 08:52:54: 		Math lib: mkl
08/21/2017 08:52:54: 		CUDA_PATH: /usr/local/cuda-8.0
08/21/2017 08:52:54: 		CUB_PATH: /usr/local/cub-1.4.1
08/21/2017 08:52:54: 		CUDNN_PATH: /usr/local/cudnn-6.0
08/21/2017 08:52:54: 		Build Branch: HEAD
08/21/2017 08:52:54: 		Build SHA1: 57260963c605c12d3796e37783433518ab8ba039
08/21/2017 08:52:54: 		Built by Source/CNTK/buildinfo.h$$0 on 516c40771854
08/21/2017 08:52:54: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
08/21/2017 08:52:54: 		MPI distribution: Open MPI
08/21/2017 08:52:54: 		MPI version: 1.10.7
08/21/2017 08:52:54: -------------------------------------------------------------------
08/21/2017 08:52:54: -------------------------------------------------------------------
08/21/2017 08:52:54: GPU info:

08/21/2017 08:52:54: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; total memory = 3020 MB; free memory = 3018 MB
08/21/2017 08:52:54: -------------------------------------------------------------------

Configuration After Processing and Variable Resolution:

configparameters: 02_Convolution_ndl_deprecated.cntk:command=train:test
configparameters: 02_Convolution_ndl_deprecated.cntk:configDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/Deprecated/MNIST/02_Convolution_ndl/
configparameters: 02_Convolution_ndl_deprecated.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Image/DataSets/MNIST
configparameters: 02_Convolution_ndl_deprecated.cntk:dataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Image/DataSets/MNIST
configparameters: 02_Convolution_ndl_deprecated.cntk:deviceId=0
configparameters: 02_Convolution_ndl_deprecated.cntk:forceDeterministicAlgorithms=true
configparameters: 02_Convolution_ndl_deprecated.cntk:imageLayout=
configparameters: 02_Convolution_ndl_deprecated.cntk:modelDir=/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu/Models
configparameters: 02_Convolution_ndl_deprecated.cntk:modelPath=/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu/Models/02_Convolution
configparameters: 02_Convolution_ndl_deprecated.cntk:numMBsToShowResult=500
configparameters: 02_Convolution_ndl_deprecated.cntk:outputDir=/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu
configparameters: 02_Convolution_ndl_deprecated.cntk:precision=float
configparameters: 02_Convolution_ndl_deprecated.cntk:rootDir=..
configparameters: 02_Convolution_ndl_deprecated.cntk:RunDir=/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu
configparameters: 02_Convolution_ndl_deprecated.cntk:stderr=-
configparameters: 02_Convolution_ndl_deprecated.cntk:test=[
    action = test
    minibatchSize = 1024
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Image/DataSets/MNIST/Test-28x28_cntk_text.txt"
        input = [
            features = [
            dim = 784
            format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]
]

configparameters: 02_Convolution_ndl_deprecated.cntk:timestamping=true
configparameters: 02_Convolution_ndl_deprecated.cntk:traceLevel=1
configparameters: 02_Convolution_ndl_deprecated.cntk:train=[
    action = "train"
    NDLNetworkBuilder = [
        imageLayout = "cudnn"
        initOnCPUOnly = true
        ndlMacros = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/Deprecated/MNIST/02_Convolution_ndl//../Macros.ndl"
        networkDescription = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Examples/Image/Deprecated/MNIST/02_Convolution_ndl//02_Convolution.ndl"
    ]
    SGD = [
        epochSize = 60000
        minibatchSize = 32
        learningRatesPerMB = 0.1*5:0.3
        momentumPerMB = 0*10:0.7
        maxEpochs = 15
    ]
    reader = [
        readerType = "CNTKTextFormatReader"
        file = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Examples/Image/DataSets/MNIST/Train-28x28_cntk_text.txt"
        input = [
            features = [
                dim = 784
                format = "dense"
            ]
            labels = [
                dim = 10
                format = "dense"
            ]
        ]
    ]    
] [SGD=[maxEpochs=3]]

08/21/2017 08:52:54: Commands: train test
08/21/2017 08:52:54: precision = "float"
08/21/2017 08:52:54: WARNING: forceDeterministicAlgorithms flag is specified. Using 1 CPU thread for processing.

08/21/2017 08:52:54: ##############################################################################
08/21/2017 08:52:54: #                                                                            #
08/21/2017 08:52:54: # train command (train action)                                               #
08/21/2017 08:52:54: #                                                                            #
08/21/2017 08:52:54: ##############################################################################

08/21/2017 08:52:54: 
Creating virgin network.
NDLBuilder Using GPU 0
conv1.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 1, Output: 28 x 28 x 16, Kernel: 5 x 5 x 1, Map: 1 x 1 x 16, Stride: 1 x 1 x 1, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.
pool1: using cuDNN convolution engine for geometry: Input: 28 x 28 x 16, Output: 14 x 14 x 16, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
conv2.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 16, Output: 14 x 14 x 32, Kernel: 5 x 5 x 16, Map: 32, Stride: 1 x 1 x 16, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.
pool2.p: using cuDNN convolution engine for geometry: Input: 14 x 14 x 32, Output: 7 x 7 x 32, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.
08/21/2017 08:52:55: 
Model has 27 nodes. Using GPU 0.

08/21/2017 08:52:55: Training criterion:   ce = CrossEntropyWithSoftmax
08/21/2017 08:52:55: Evaluation criterion: errs = ClassificationError


Allocating matrices for forward and/or backward propagation.

Gradient Memory Aliasing: 6 are aliased.
	conv1.c.c (gradient) reuses conv1.cpb (gradient)
	ol.t (gradient) reuses ol.z (gradient)
	conv2.c.c (gradient) reuses conv2.cpb (gradient)

Memory Sharing: Out of 49 matrices, 29 are shared as 6, and 20 are not shared.

Here are the ones that share memory:
	{ conv1.c.c : [28 x 28 x 16 x *]
	  conv1.out : [28 x 28 x 16 x *]
	  conv1.w.W : [16 x 25] (gradient) }
	{ conv1.c.c : [28 x 28 x 16 x *] (gradient)
	  conv1.cpb : [28 x 28 x 16 x *]
	  conv1.cpb : [28 x 28 x 16 x *] (gradient)
	  conv2.out : [14 x 14 x 32 x *] (gradient)
	  h1.t : [128 x *]
	  h1.t : [128 x *] (gradient)
	  h1.y : [128 x 1 x *]
	  pool1 : [14 x 14 x 16 x *] (gradient) }
	{ conv1.b.b : [1 x 1 x 16] (gradient)
	  conv1.out : [28 x 28 x 16 x *] (gradient)
	  conv2.c.c : [14 x 14 x 32 x *]
	  conv2.out : [14 x 14 x 32 x *] }
	{ conv2.c.c : [14 x 14 x 32 x *] (gradient)
	  conv2.cpb : [14 x 14 x 32 x *]
	  conv2.cpb : [14 x 14 x 32 x *] (gradient)
	  pool2.p : [7 x 7 x 32 x *] }
	{ h1.W : [128 x 7 x 7 x 32] (gradient)
	  h1.y : [128 x 1 x *] (gradient)
	  ol.z : [10 x 1 x *] }
	{ conv2.w.W : [32 x 400] (gradient)
	  h1.z : [128 x 1 x *]
	  h1.z : [128 x 1 x *] (gradient)
	  ol.t : [10 x 1 x *]
	  ol.t : [10 x 1 x *] (gradient)
	  ol.z : [10 x 1 x *] (gradient)
	  pool2.p : [7 x 7 x 32 x *] (gradient) }

Here are the ones that don't share memory:
	{features : [28 x 28 x 1 x *]}
	{conv1.b.b : [1 x 1 x 16]}
	{conv1.w.W : [16 x 25]}
	{conv2.w.W : [32 x 400]}
	{conv2.b.b : [1 x 1 x 32]}
	{h1.W : [128 x 7 x 7 x 32]}
	{h1.b : [128 x 1]}
	{ol.W : [10 x 128]}
	{ol.b : [10 x 1]}
	{featScale : [1 x 1]}
	{labels : [10 x *]}
	{errs : [1]}
	{ce : [1]}
	{ol.b : [10 x 1] (gradient)}
	{h1.b : [128 x 1] (gradient)}
	{ol.W : [10 x 128] (gradient)}
	{featScaled : [28 x 28 x 1 x *]}
	{ce : [1] (gradient)}
	{pool1 : [14 x 14 x 16 x *]}
	{conv2.b.b : [1 x 1 x 32] (gradient)}


08/21/2017 08:52:55: Training 215370 parameters in 8 out of 8 parameter tensors and 22 nodes with gradient:

08/21/2017 08:52:55: 	Node 'conv1.b.b' (LearnableParameter operation) : [1 x 1 x 16]
08/21/2017 08:52:55: 	Node 'conv1.w.W' (LearnableParameter operation) : [16 x 25]
08/21/2017 08:52:55: 	Node 'conv2.b.b' (LearnableParameter operation) : [1 x 1 x 32]
08/21/2017 08:52:55: 	Node 'conv2.w.W' (LearnableParameter operation) : [32 x 400]
08/21/2017 08:52:55: 	Node 'h1.W' (LearnableParameter operation) : [128 x 7 x 7 x 32]
08/21/2017 08:52:55: 	Node 'h1.b' (LearnableParameter operation) : [128 x 1]
08/21/2017 08:52:55: 	Node 'ol.W' (LearnableParameter operation) : [10 x 128]
08/21/2017 08:52:55: 	Node 'ol.b' (LearnableParameter operation) : [10 x 1]

08/21/2017 08:52:55: No PreCompute nodes found, or all already computed. Skipping pre-computation step.

08/21/2017 08:52:55: Starting Epoch 1: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/21/2017 08:52:55: Starting minibatch loop.
08/21/2017 08:52:59:  Epoch[ 1 of 3]-Minibatch[   1- 500, 26.67%]: ce = 1.12710205 * 16000; errs = 38.131% * 16000; time = 4.3013s; samplesPerSecond = 3719.8
08/21/2017 08:53:01:  Epoch[ 1 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.17268628 * 16000; errs = 4.737% * 16000; time = 2.0669s; samplesPerSecond = 7741.1
08/21/2017 08:53:03:  Epoch[ 1 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.10816553 * 16000; errs = 3.156% * 16000; time = 2.0651s; samplesPerSecond = 7747.9
08/21/2017 08:53:05: Finished Epoch[ 1 of 3]: [Training] ce = 0.39294049 * 60000; errs = 12.800% * 60000; totalSamplesSeen = 60000; learningRatePerSample = 0.003125; epochTime=9.99959s
08/21/2017 08:53:05: SGD: Saving checkpoint model '/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu/Models/02_Convolution.1'

08/21/2017 08:53:05: Starting Epoch 2: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/21/2017 08:53:05: Starting minibatch loop.
08/21/2017 08:53:07:  Epoch[ 2 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.07197879 * 16000; errs = 2.094% * 16000; time = 2.0686s; samplesPerSecond = 7734.8
08/21/2017 08:53:09:  Epoch[ 2 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.06179803 * 16000; errs = 1.819% * 16000; time = 2.0723s; samplesPerSecond = 7721.0
08/21/2017 08:53:11:  Epoch[ 2 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.06320349 * 16000; errs = 1.819% * 16000; time = 2.0661s; samplesPerSecond = 7744.2
08/21/2017 08:53:13: Finished Epoch[ 2 of 3]: [Training] ce = 0.06496559 * 60000; errs = 1.913% * 60000; totalSamplesSeen = 120000; learningRatePerSample = 0.003125; epochTime=7.77137s
08/21/2017 08:53:13: SGD: Saving checkpoint model '/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu/Models/02_Convolution.2'

08/21/2017 08:53:13: Starting Epoch 3: learning rate per sample = 0.003125  effective momentum = 0.000000  momentum as time constant = 0.0 samples

08/21/2017 08:53:13: Starting minibatch loop.
08/21/2017 08:53:15:  Epoch[ 3 of 3]-Minibatch[   1- 500, 26.67%]: ce = 0.04416695 * 16000; errs = 1.219% * 16000; time = 2.0721s; samplesPerSecond = 7721.6
08/21/2017 08:53:17:  Epoch[ 3 of 3]-Minibatch[ 501-1000, 53.33%]: ce = 0.04374327 * 16000; errs = 1.300% * 16000; time = 2.0719s; samplesPerSecond = 7722.2
08/21/2017 08:53:19:  Epoch[ 3 of 3]-Minibatch[1001-1500, 80.00%]: ce = 0.04714840 * 16000; errs = 1.419% * 16000; time = 2.0659s; samplesPerSecond = 7744.6
08/21/2017 08:53:21: Finished Epoch[ 3 of 3]: [Training] ce = 0.04439237 * 60000; errs = 1.287% * 60000; totalSamplesSeen = 180000; learningRatePerSample = 0.003125; epochTime=7.77833s
08/21/2017 08:53:21: SGD: Saving checkpoint model '/tmp/cntk-test-20170821083849.769346/Examples/Image/Deprecated/MNIST_02_Convolution_ndl@release_gpu/Models/02_Convolution'

08/21/2017 08:53:21: Action "train" complete.


08/21/2017 08:53:21: ##############################################################################
08/21/2017 08:53:21: #                                                                            #
08/21/2017 08:53:21: # test command (test action)                                                 #
08/21/2017 08:53:21: #                                                                            #
08/21/2017 08:53:21: ##############################################################################


Post-processing network...

3 roots:
	ce = CrossEntropyWithSoftmax()
	errs = ClassificationError()
	ol.z = Plus()

Validating network. 27 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [10 x *1]
Validating --> ol.W = LearnableParameter() :  -> [10 x 128]
Validating --> h1.W = LearnableParameter() :  -> [128 x 7 x 7 x 32]
Validating --> conv2.w.W = LearnableParameter() :  -> [32 x 400]
Validating --> conv1.w.W = LearnableParameter() :  -> [16 x 25]
Validating --> featScale = LearnableParameter() :  -> [1 x 1]
Validating --> features = InputValue() :  -> [28 x 28 x 1 x *1]
Validating --> featScaled = ElementTimes (featScale, features) : [1 x 1], [28 x 28 x 1 x *1] -> [28 x 28 x 1 x *1]
Validating --> conv1.c.c = Convolution (conv1.w.W, featScaled) : [16 x 25], [28 x 28 x 1 x *1] -> [28 x 28 x 16 x *1]
Validating --> conv1.b.b = LearnableParameter() :  -> [1 x 1 x 16]
Validating --> conv1.cpb = Plus (conv1.c.c, conv1.b.b) : [28 x 28 x 16 x *1], [1 x 1 x 16] -> [28 x 28 x 16 x *1]
Validating --> conv1.out = RectifiedLinear (conv1.cpb) : [28 x 28 x 16 x *1] -> [28 x 28 x 16 x *1]
Validating --> pool1 = MaxPooling (conv1.out) : [28 x 28 x 16 x *1] -> [14 x 14 x 16 x *1]
Validating --> conv2.c.c = Convolution (conv2.w.W, pool1) : [32 x 400], [14 x 14 x 16 x *1] -> [14 x 14 x 32 x *1]
Validating --> conv2.b.b = LearnableParameter() :  -> [1 x 1 x 32]
Validating --> conv2.cpb = Plus (conv2.c.c, conv2.b.b) : [14 x 14 x 32 x *1], [1 x 1 x 32] -> [14 x 14 x 32 x *1]
Validating --> conv2.out = RectifiedLinear (conv2.cpb) : [14 x 14 x 32 x *1] -> [14 x 14 x 32 x *1]
Validating --> pool2.p = Pooling (conv2.out) : [14 x 14 x 32 x *1] -> [7 x 7 x 32 x *1]
Validating --> h1.t = Times (h1.W, pool2.p) : [128 x 7 x 7 x 32], [7 x 7 x 32 x *1] -> [128 x *1]
Validating --> h1.b = LearnableParameter() :  -> [128 x 1]
Validating --> h1.z = Plus (h1.t, h1.b) : [128 x *1], [128 x 1] -> [128 x 1 x *1]
Validating --> h1.y = Sigmoid (h1.z) : [128 x 1 x *1] -> [128 x 1 x *1]
Validating --> ol.t = Times (ol.W, h1.y) : [10 x 128], [128 x 1 x *1] -> [10 x 1 x *1]
Validating --> ol.b = LearnableParameter() :  -> [10 x 1]
Validating --> ol.z = Plus (ol.t, ol.b) : [10 x 1 x *1], [10 x 1] -> [10 x 1 x *1]
Validating --> ce = CrossEntropyWithSoftmax (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]
Validating --> errs = ClassificationError (labels, ol.z) : [10 x *1], [10 x 1 x *1] -> [1]

Validating network. 16 nodes to process in pass 2.


Validating network, final pass.

conv1.c.c: using cuDNN convolution engine for geometry: Input: 28 x 28 x 1, Output: 28 x 28 x 16, Kernel: 5 x 5 x 1, Map: 1 x 1 x 16, Stride: 1 x 1 x 1, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.
pool1: using cuDNN convolution engine for geometry: Input: 28 x 28 x 16, Output: 14 x 14 x 16, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1), AutoPad: (0), LowerPad: 0, UpperPad: 0.
conv2.c.c: using cuDNN convolution engine for geometry: Input: 14 x 14 x 16, Output: 14 x 14 x 32, Kernel: 5 x 5 x 16, Map: 32, Stride: 1 x 1 x 16, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.
pool2.p: using cuDNN convolution engine for geometry: Input: 14 x 14 x 32, Output: 7 x 7 x 32, Kernel: 2 x 2 x 1, Map: 1, Stride: 2 x 2 x 1, Sharing: (1, 1, 1), AutoPad: (1, 1, 0), LowerPad: 0 x 0 x 0, UpperPad: 0 x 0 x 0.



Post-processing network complete.

evalNodeNames are not specified, using all the default evalnodes and training criterion nodes.


Allocating matrices for forward and/or backward propagation.

Memory Sharing: Out of 27 matrices, 14 are shared as 3, and 13 are not shared.

Here are the ones that share memory:
	{ featScaled : [28 x 28 x 1 x *1]
	  h1.z : [128 x 1 x *1]
	  ol.t : [10 x 1 x *1]
	  pool1 : [14 x 14 x 16 x *1]
	  pool2.p : [7 x 7 x 32 x *1] }
	{ conv1.cpb : [28 x 28 x 16 x *1]
	  conv2.c.c : [14 x 14 x 32 x *1]
	  conv2.out : [14 x 14 x 32 x *1]
	  h1.t : [128 x *1]
	  h1.y : [128 x 1 x *1]
	  ol.z : [10 x 1 x *1] }
	{ conv1.c.c : [28 x 28 x 16 x *1]
	  conv1.out : [28 x 28 x 16 x *1]
	  conv2.cpb : [14 x 14 x 32 x *1] }

Here are the ones that don't share memory:
	{features : [28 x 28 x 1 x *1]}
	{ce : [1]}
	{labels : [10 x *1]}
	{ol.b : [10 x 1]}
	{ol.W : [10 x 128]}
	{featScale : [1 x 1]}
	{conv1.b.b : [1 x 1 x 16]}
	{errs : [1]}
	{conv2.w.W : [32 x 400]}
	{conv1.w.W : [16 x 25]}
	{h1.b : [128 x 1]}
	{h1.W : [128 x 7 x 7 x 32]}
	{conv2.b.b : [1 x 1 x 32]}

08/21/2017 08:53:21: Minibatch[1-10]: errs = 1.320% * 10000; ce = 0.04420779 * 10000
08/21/2017 08:53:21: Final Results: Minibatch[1-10]: errs = 1.320% * 10000; ce = 0.04420779 * 10000; perplexity = 1.04519951

08/21/2017 08:53:21: Action "test" complete.

08/21/2017 08:53:21: __COMPLETED__